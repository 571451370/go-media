package xed

/*
#include <xed-interface.h>

#cgo pkg-config: xed
*/
import "C"

type (
	MachineMode  C.xed_machine_mode_enum_t
	AddressWidth C.xed_address_width_enum_t
	Category     C.xed_category_enum_t
	Attribute    C.xed_attribute_enum_t
	Error        C.xed_error_enum_t
)

const (
	MACHINE_MODE_INVALID        MachineMode = C.XED_MACHINE_MODE_INVALID
	MACHINE_MODE_LONG_64        MachineMode = C.XED_MACHINE_MODE_LONG_64
	MACHINE_MODE_LONG_COMPAT_32 MachineMode = C.XED_MACHINE_MODE_LONG_COMPAT_32
	MACHINE_MODE_LONG_COMPAT_16 MachineMode = C.XED_MACHINE_MODE_LONG_COMPAT_16
	MACHINE_MODE_LEGACY_32      MachineMode = C.XED_MACHINE_MODE_LEGACY_32
	MACHINE_MODE_LEGACY_16      MachineMode = C.XED_MACHINE_MODE_LEGACY_16
	MACHINE_MODE_REAL_16        MachineMode = C.XED_MACHINE_MODE_REAL_16
	MACHINE_MODE_LAST           MachineMode = C.XED_MACHINE_MODE_LAST
)

const (
	ADDRESS_WIDTH_INVALID AddressWidth = C.XED_ADDRESS_WIDTH_INVALID
	ADDRESS_WIDTH_16b     AddressWidth = C.XED_ADDRESS_WIDTH_16b
	ADDRESS_WIDTH_32b     AddressWidth = C.XED_ADDRESS_WIDTH_32b
	ADDRESS_WIDTH_64b     AddressWidth = C.XED_ADDRESS_WIDTH_64b
	ADDRESS_WIDTH_LAST    AddressWidth = C.XED_ADDRESS_WIDTH_LAST
)

const (
	CATEGORY_INVALID       Category = C.XED_CATEGORY_INVALID
	CATEGORY_3DNOW         Category = C.XED_CATEGORY_3DNOW
	CATEGORY_ADOX_ADCX     Category = C.XED_CATEGORY_ADOX_ADCX
	CATEGORY_AES           Category = C.XED_CATEGORY_AES
	CATEGORY_AVX           Category = C.XED_CATEGORY_AVX
	CATEGORY_AVX2          Category = C.XED_CATEGORY_AVX2
	CATEGORY_AVX2GATHER    Category = C.XED_CATEGORY_AVX2GATHER
	CATEGORY_AVX512        Category = C.XED_CATEGORY_AVX512
	CATEGORY_AVX512_4FMAPS Category = C.XED_CATEGORY_AVX512_4FMAPS
	CATEGORY_AVX512_4VNNIW Category = C.XED_CATEGORY_AVX512_4VNNIW
	CATEGORY_AVX512_BITALG Category = C.XED_CATEGORY_AVX512_BITALG
	CATEGORY_AVX512_VBMI   Category = C.XED_CATEGORY_AVX512_VBMI
	CATEGORY_BINARY        Category = C.XED_CATEGORY_BINARY
	CATEGORY_BITBYTE       Category = C.XED_CATEGORY_BITBYTE
	CATEGORY_BLEND         Category = C.XED_CATEGORY_BLEND
	CATEGORY_BMI1          Category = C.XED_CATEGORY_BMI1
	CATEGORY_BMI2          Category = C.XED_CATEGORY_BMI2
	CATEGORY_BROADCAST     Category = C.XED_CATEGORY_BROADCAST
	CATEGORY_CALL          Category = C.XED_CATEGORY_CALL
	CATEGORY_CET           Category = C.XED_CATEGORY_CET
	CATEGORY_CLDEMOTE      Category = C.XED_CATEGORY_CLDEMOTE
	CATEGORY_CLFLUSHOPT    Category = C.XED_CATEGORY_CLFLUSHOPT
	CATEGORY_CLWB          Category = C.XED_CATEGORY_CLWB
	CATEGORY_CLZERO        Category = C.XED_CATEGORY_CLZERO
	CATEGORY_CMOV          Category = C.XED_CATEGORY_CMOV
	CATEGORY_COMPRESS      Category = C.XED_CATEGORY_COMPRESS
	CATEGORY_COND_BR       Category = C.XED_CATEGORY_COND_BR
	CATEGORY_CONFLICT      Category = C.XED_CATEGORY_CONFLICT
	CATEGORY_CONVERT       Category = C.XED_CATEGORY_CONVERT
	CATEGORY_DATAXFER      Category = C.XED_CATEGORY_DATAXFER
	CATEGORY_DECIMAL       Category = C.XED_CATEGORY_DECIMAL
	CATEGORY_EXPAND        Category = C.XED_CATEGORY_EXPAND
	CATEGORY_FCMOV         Category = C.XED_CATEGORY_FCMOV
	CATEGORY_FLAGOP        Category = C.XED_CATEGORY_FLAGOP
	CATEGORY_FMA4          Category = C.XED_CATEGORY_FMA4
	CATEGORY_GATHER        Category = C.XED_CATEGORY_GATHER
	CATEGORY_GFNI          Category = C.XED_CATEGORY_GFNI
	CATEGORY_IFMA          Category = C.XED_CATEGORY_IFMA
	CATEGORY_INTERRUPT     Category = C.XED_CATEGORY_INTERRUPT
	CATEGORY_IO            Category = C.XED_CATEGORY_IO
	CATEGORY_IOSTRINGOP    Category = C.XED_CATEGORY_IOSTRINGOP
	CATEGORY_KMASK         Category = C.XED_CATEGORY_KMASK
	CATEGORY_LOGICAL       Category = C.XED_CATEGORY_LOGICAL
	CATEGORY_LOGICAL_FP    Category = C.XED_CATEGORY_LOGICAL_FP
	CATEGORY_LZCNT         Category = C.XED_CATEGORY_LZCNT
	CATEGORY_MISC          Category = C.XED_CATEGORY_MISC
	CATEGORY_MMX           Category = C.XED_CATEGORY_MMX
	CATEGORY_MOVDIR        Category = C.XED_CATEGORY_MOVDIR
	CATEGORY_MPX           Category = C.XED_CATEGORY_MPX
	CATEGORY_NOP           Category = C.XED_CATEGORY_NOP
	CATEGORY_PCLMULQDQ     Category = C.XED_CATEGORY_PCLMULQDQ
	CATEGORY_PCONFIG       Category = C.XED_CATEGORY_PCONFIG
	CATEGORY_PKU           Category = C.XED_CATEGORY_PKU
	CATEGORY_POP           Category = C.XED_CATEGORY_POP
	CATEGORY_PREFETCH      Category = C.XED_CATEGORY_PREFETCH
	CATEGORY_PREFETCHWT1   Category = C.XED_CATEGORY_PREFETCHWT1
	CATEGORY_PT            Category = C.XED_CATEGORY_PT
	CATEGORY_PUSH          Category = C.XED_CATEGORY_PUSH
	CATEGORY_RDPID         Category = C.XED_CATEGORY_RDPID
	CATEGORY_RDRAND        Category = C.XED_CATEGORY_RDRAND
	CATEGORY_RDSEED        Category = C.XED_CATEGORY_RDSEED
	CATEGORY_RDWRFSGS      Category = C.XED_CATEGORY_RDWRFSGS
	CATEGORY_RET           Category = C.XED_CATEGORY_RET
	CATEGORY_ROTATE        Category = C.XED_CATEGORY_ROTATE
	CATEGORY_SCATTER       Category = C.XED_CATEGORY_SCATTER
	CATEGORY_SEGOP         Category = C.XED_CATEGORY_SEGOP
	CATEGORY_SEMAPHORE     Category = C.XED_CATEGORY_SEMAPHORE
	CATEGORY_SETCC         Category = C.XED_CATEGORY_SETCC
	CATEGORY_SGX           Category = C.XED_CATEGORY_SGX
	CATEGORY_SHA           Category = C.XED_CATEGORY_SHA
	CATEGORY_SHIFT         Category = C.XED_CATEGORY_SHIFT
	CATEGORY_SMAP          Category = C.XED_CATEGORY_SMAP
	CATEGORY_SSE           Category = C.XED_CATEGORY_SSE
	CATEGORY_STRINGOP      Category = C.XED_CATEGORY_STRINGOP
	CATEGORY_STTNI         Category = C.XED_CATEGORY_STTNI
	CATEGORY_SYSCALL       Category = C.XED_CATEGORY_SYSCALL
	CATEGORY_SYSRET        Category = C.XED_CATEGORY_SYSRET
	CATEGORY_SYSTEM        Category = C.XED_CATEGORY_SYSTEM
	CATEGORY_TBM           Category = C.XED_CATEGORY_TBM
	CATEGORY_UNCOND_BR     Category = C.XED_CATEGORY_UNCOND_BR
	CATEGORY_VAES          Category = C.XED_CATEGORY_VAES
	CATEGORY_VBMI2         Category = C.XED_CATEGORY_VBMI2
	CATEGORY_VFMA          Category = C.XED_CATEGORY_VFMA
	CATEGORY_VPCLMULQDQ    Category = C.XED_CATEGORY_VPCLMULQDQ
	CATEGORY_VTX           Category = C.XED_CATEGORY_VTX
	CATEGORY_WAITPKG       Category = C.XED_CATEGORY_WAITPKG
	CATEGORY_WIDENOP       Category = C.XED_CATEGORY_WIDENOP
	CATEGORY_X87_ALU       Category = C.XED_CATEGORY_X87_ALU
	CATEGORY_XOP           Category = C.XED_CATEGORY_XOP
	CATEGORY_XSAVE         Category = C.XED_CATEGORY_XSAVE
	CATEGORY_XSAVEOPT      Category = C.XED_CATEGORY_XSAVEOPT
	CATEGORY_LAST          Category = C.XED_CATEGORY_LAST
)

const (
	ATTRIBUTE_INVALID                     Attribute = C.XED_ATTRIBUTE_INVALID
	ATTRIBUTE_AMDONLY                     Attribute = C.XED_ATTRIBUTE_AMDONLY
	ATTRIBUTE_ATT_OPERAND_ORDER_EXCEPTION Attribute = C.XED_ATTRIBUTE_ATT_OPERAND_ORDER_EXCEPTION
	ATTRIBUTE_BROADCAST_ENABLED           Attribute = C.XED_ATTRIBUTE_BROADCAST_ENABLED
	ATTRIBUTE_BYTEOP                      Attribute = C.XED_ATTRIBUTE_BYTEOP
	ATTRIBUTE_DISP8_EIGHTHMEM             Attribute = C.XED_ATTRIBUTE_DISP8_EIGHTHMEM
	ATTRIBUTE_DISP8_FULL                  Attribute = C.XED_ATTRIBUTE_DISP8_FULL
	ATTRIBUTE_DISP8_FULLMEM               Attribute = C.XED_ATTRIBUTE_DISP8_FULLMEM
	ATTRIBUTE_DISP8_GPR_READER            Attribute = C.XED_ATTRIBUTE_DISP8_GPR_READER
	ATTRIBUTE_DISP8_GPR_READER_BYTE       Attribute = C.XED_ATTRIBUTE_DISP8_GPR_READER_BYTE
	ATTRIBUTE_DISP8_GPR_READER_WORD       Attribute = C.XED_ATTRIBUTE_DISP8_GPR_READER_WORD
	ATTRIBUTE_DISP8_GPR_WRITER_LDOP_D     Attribute = C.XED_ATTRIBUTE_DISP8_GPR_WRITER_LDOP_D
	ATTRIBUTE_DISP8_GPR_WRITER_LDOP_Q     Attribute = C.XED_ATTRIBUTE_DISP8_GPR_WRITER_LDOP_Q
	ATTRIBUTE_DISP8_GPR_WRITER_STORE      Attribute = C.XED_ATTRIBUTE_DISP8_GPR_WRITER_STORE
	ATTRIBUTE_DISP8_GPR_WRITER_STORE_BYTE Attribute = C.XED_ATTRIBUTE_DISP8_GPR_WRITER_STORE_BYTE
	ATTRIBUTE_DISP8_GPR_WRITER_STORE_WORD Attribute = C.XED_ATTRIBUTE_DISP8_GPR_WRITER_STORE_WORD
	ATTRIBUTE_DISP8_GSCAT                 Attribute = C.XED_ATTRIBUTE_DISP8_GSCAT
	ATTRIBUTE_DISP8_HALF                  Attribute = C.XED_ATTRIBUTE_DISP8_HALF
	ATTRIBUTE_DISP8_HALFMEM               Attribute = C.XED_ATTRIBUTE_DISP8_HALFMEM
	ATTRIBUTE_DISP8_MEM128                Attribute = C.XED_ATTRIBUTE_DISP8_MEM128
	ATTRIBUTE_DISP8_MOVDDUP               Attribute = C.XED_ATTRIBUTE_DISP8_MOVDDUP
	ATTRIBUTE_DISP8_QUARTERMEM            Attribute = C.XED_ATTRIBUTE_DISP8_QUARTERMEM
	ATTRIBUTE_DISP8_SCALAR                Attribute = C.XED_ATTRIBUTE_DISP8_SCALAR
	ATTRIBUTE_DISP8_TUPLE1                Attribute = C.XED_ATTRIBUTE_DISP8_TUPLE1
	ATTRIBUTE_DISP8_TUPLE1_4X             Attribute = C.XED_ATTRIBUTE_DISP8_TUPLE1_4X
	ATTRIBUTE_DISP8_TUPLE1_BYTE           Attribute = C.XED_ATTRIBUTE_DISP8_TUPLE1_BYTE
	ATTRIBUTE_DISP8_TUPLE1_WORD           Attribute = C.XED_ATTRIBUTE_DISP8_TUPLE1_WORD
	ATTRIBUTE_DISP8_TUPLE2                Attribute = C.XED_ATTRIBUTE_DISP8_TUPLE2
	ATTRIBUTE_DISP8_TUPLE4                Attribute = C.XED_ATTRIBUTE_DISP8_TUPLE4
	ATTRIBUTE_DISP8_TUPLE8                Attribute = C.XED_ATTRIBUTE_DISP8_TUPLE8
	ATTRIBUTE_DOUBLE_WIDE_MEMOP           Attribute = C.XED_ATTRIBUTE_DOUBLE_WIDE_MEMOP
	ATTRIBUTE_DOUBLE_WIDE_OUTPUT          Attribute = C.XED_ATTRIBUTE_DOUBLE_WIDE_OUTPUT
	ATTRIBUTE_DWORD_INDICES               Attribute = C.XED_ATTRIBUTE_DWORD_INDICES
	ATTRIBUTE_ELEMENT_SIZE_D              Attribute = C.XED_ATTRIBUTE_ELEMENT_SIZE_D
	ATTRIBUTE_ELEMENT_SIZE_Q              Attribute = C.XED_ATTRIBUTE_ELEMENT_SIZE_Q
	ATTRIBUTE_EXCEPTION_BR                Attribute = C.XED_ATTRIBUTE_EXCEPTION_BR
	ATTRIBUTE_FAR_XFER                    Attribute = C.XED_ATTRIBUTE_FAR_XFER
	ATTRIBUTE_FIXED_BASE0                 Attribute = C.XED_ATTRIBUTE_FIXED_BASE0
	ATTRIBUTE_FIXED_BASE1                 Attribute = C.XED_ATTRIBUTE_FIXED_BASE1
	ATTRIBUTE_GATHER                      Attribute = C.XED_ATTRIBUTE_GATHER
	ATTRIBUTE_HALF_WIDE_OUTPUT            Attribute = C.XED_ATTRIBUTE_HALF_WIDE_OUTPUT
	ATTRIBUTE_HLE_ACQ_ABLE                Attribute = C.XED_ATTRIBUTE_HLE_ACQ_ABLE
	ATTRIBUTE_HLE_REL_ABLE                Attribute = C.XED_ATTRIBUTE_HLE_REL_ABLE
	ATTRIBUTE_IGNORES_OSFXSR              Attribute = C.XED_ATTRIBUTE_IGNORES_OSFXSR
	ATTRIBUTE_IMPLICIT_ONE                Attribute = C.XED_ATTRIBUTE_IMPLICIT_ONE
	ATTRIBUTE_INDEX_REG_IS_POINTER        Attribute = C.XED_ATTRIBUTE_INDEX_REG_IS_POINTER
	ATTRIBUTE_INDIRECT_BRANCH             Attribute = C.XED_ATTRIBUTE_INDIRECT_BRANCH
	ATTRIBUTE_KMASK                       Attribute = C.XED_ATTRIBUTE_KMASK
	ATTRIBUTE_LOCKABLE                    Attribute = C.XED_ATTRIBUTE_LOCKABLE
	ATTRIBUTE_LOCKED                      Attribute = C.XED_ATTRIBUTE_LOCKED
	ATTRIBUTE_MASKOP                      Attribute = C.XED_ATTRIBUTE_MASKOP
	ATTRIBUTE_MASKOP_EVEX                 Attribute = C.XED_ATTRIBUTE_MASKOP_EVEX
	ATTRIBUTE_MASK_AS_CONTROL             Attribute = C.XED_ATTRIBUTE_MASK_AS_CONTROL
	ATTRIBUTE_MASK_VARIABLE_MEMOP         Attribute = C.XED_ATTRIBUTE_MASK_VARIABLE_MEMOP
	ATTRIBUTE_MEMORY_FAULT_SUPPRESSION    Attribute = C.XED_ATTRIBUTE_MEMORY_FAULT_SUPPRESSION
	ATTRIBUTE_MMX_EXCEPT                  Attribute = C.XED_ATTRIBUTE_MMX_EXCEPT
	ATTRIBUTE_MPX_PREFIX_ABLE             Attribute = C.XED_ATTRIBUTE_MPX_PREFIX_ABLE
	ATTRIBUTE_MULTISOURCE4                Attribute = C.XED_ATTRIBUTE_MULTISOURCE4
	ATTRIBUTE_MXCSR                       Attribute = C.XED_ATTRIBUTE_MXCSR
	ATTRIBUTE_MXCSR_RD                    Attribute = C.XED_ATTRIBUTE_MXCSR_RD
	ATTRIBUTE_NONTEMPORAL                 Attribute = C.XED_ATTRIBUTE_NONTEMPORAL
	ATTRIBUTE_NOP                         Attribute = C.XED_ATTRIBUTE_NOP
	ATTRIBUTE_NOTSX                       Attribute = C.XED_ATTRIBUTE_NOTSX
	ATTRIBUTE_NOTSX_COND                  Attribute = C.XED_ATTRIBUTE_NOTSX_COND
	ATTRIBUTE_NO_RIP_REL                  Attribute = C.XED_ATTRIBUTE_NO_RIP_REL
	ATTRIBUTE_PREFETCH                    Attribute = C.XED_ATTRIBUTE_PREFETCH
	ATTRIBUTE_PROTECTED_MODE              Attribute = C.XED_ATTRIBUTE_PROTECTED_MODE
	ATTRIBUTE_QWORD_INDICES               Attribute = C.XED_ATTRIBUTE_QWORD_INDICES
	ATTRIBUTE_REP                         Attribute = C.XED_ATTRIBUTE_REP
	ATTRIBUTE_REQUIRES_ALIGNMENT          Attribute = C.XED_ATTRIBUTE_REQUIRES_ALIGNMENT
	ATTRIBUTE_RING0                       Attribute = C.XED_ATTRIBUTE_RING0
	ATTRIBUTE_SCALABLE                    Attribute = C.XED_ATTRIBUTE_SCALABLE
	ATTRIBUTE_SCATTER                     Attribute = C.XED_ATTRIBUTE_SCATTER
	ATTRIBUTE_SIMD_SCALAR                 Attribute = C.XED_ATTRIBUTE_SIMD_SCALAR
	ATTRIBUTE_SKIPLOW32                   Attribute = C.XED_ATTRIBUTE_SKIPLOW32
	ATTRIBUTE_SKIPLOW64                   Attribute = C.XED_ATTRIBUTE_SKIPLOW64
	ATTRIBUTE_SPECIAL_AGEN_REQUIRED       Attribute = C.XED_ATTRIBUTE_SPECIAL_AGEN_REQUIRED
	ATTRIBUTE_STACKPOP0                   Attribute = C.XED_ATTRIBUTE_STACKPOP0
	ATTRIBUTE_STACKPOP1                   Attribute = C.XED_ATTRIBUTE_STACKPOP1
	ATTRIBUTE_STACKPUSH0                  Attribute = C.XED_ATTRIBUTE_STACKPUSH0
	ATTRIBUTE_STACKPUSH1                  Attribute = C.XED_ATTRIBUTE_STACKPUSH1
	ATTRIBUTE_X87_CONTROL                 Attribute = C.XED_ATTRIBUTE_X87_CONTROL
	ATTRIBUTE_X87_MMX_STATE_CW            Attribute = C.XED_ATTRIBUTE_X87_MMX_STATE_CW
	ATTRIBUTE_X87_MMX_STATE_R             Attribute = C.XED_ATTRIBUTE_X87_MMX_STATE_R
	ATTRIBUTE_X87_MMX_STATE_W             Attribute = C.XED_ATTRIBUTE_X87_MMX_STATE_W
	ATTRIBUTE_X87_NOWAIT                  Attribute = C.XED_ATTRIBUTE_X87_NOWAIT
	ATTRIBUTE_XMM_STATE_CW                Attribute = C.XED_ATTRIBUTE_XMM_STATE_CW
	ATTRIBUTE_XMM_STATE_R                 Attribute = C.XED_ATTRIBUTE_XMM_STATE_R
	ATTRIBUTE_XMM_STATE_W                 Attribute = C.XED_ATTRIBUTE_XMM_STATE_W
	ATTRIBUTE_LAST                        Attribute = C.XED_ATTRIBUTE_LAST
)

func (c Category) String() string {
	return C.GoString(C.xed_category_enum_t2str(C.xed_category_enum_t(c)))
}

func (c Attribute) String() string {
	return C.GoString(C.xed_attribute_enum_t2str(C.xed_attribute_enum_t(c)))
}

func (e Error) Error() string {
	return C.GoString(C.xed_error_enum_t2str(C.xed_error_enum_t(e)))
}

type DecodedInst C.xed_decoded_inst_t

func (c *DecodedInst) Zero() {
	C.xed_decoded_inst_zero((*C.xed_decoded_inst_t)(c))
}

func (c *DecodedInst) SetMode(mmode MachineMode, stack_addr_width AddressWidth) {
	C.xed_decoded_inst_set_mode((*C.xed_decoded_inst_t)(c), C.xed_machine_mode_enum_t(mmode), C.xed_address_width_enum_t(stack_addr_width))
}

func (c *DecodedInst) SetScale(scale uint) {
	C.xed_decoded_inst_set_scale((*C.xed_decoded_inst_t)(c), C.xed_uint_t(scale))
}

func (c *DecodedInst) Valid() bool {
	return xedbool(C.xed_decoded_inst_valid((*C.xed_decoded_inst_t)(c)))
}

func (c *DecodedInst) Decode(itext []byte) error {
	return Error(C.xed_ild_decode((*C.xed_decoded_inst_t)(c), (*C.xed_uint8_t)(&itext[0]), C.uint(len(itext))))
}

func xedbool(b C.xed_bool_t) bool {
	if b != 0 {
		return true
	}
	return false
}

func init() {
	C.xed_tables_init()
}
